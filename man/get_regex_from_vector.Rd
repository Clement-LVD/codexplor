% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_regex_from_vector.R
\name{get_regex_from_vector}
\alias{get_regex_from_vector}
\title{Generate Regular Expression from a Character Vector}
\usage{
get_regex_from_vector(
  vector,
  prefix_for_regex = "",
  suffix_for_regex = "",
  fix_escaping = TRUE,
  ...
)
}
\arguments{
\item{vector}{A character vector containing the elements to convert into a regular expression.}

\item{prefix_for_regex}{A string to prepend to each element of the vector in the regex pattern.}

\item{suffix_for_regex}{A string to append to each element of the vector in the regex pattern.}

\item{fix_escaping}{A boolean, indicating if escaping should be fixed. Default is TRUE}

\item{...}{Passed to fix_escaping}
}
\value{
A single character string containing the regular expression pattern
created by concatenating all elements from the input vector,
with the specified prefix and suffix applied, and special characters escaped.
}
\description{
This function takes a vector of strings and returns a concatenated regular expression pattern.
It allows adding a prefix and/or suffix to each element and escaping special characters.
}
\details{
such as a list of \code{special_chars_to_escape},
a number of escaping char. to add (default is \code{num_escapes = 2}),
the escaping char. to consider, etc.
}
\examples{
# Example 1: Create a regex pattern for a vector of words
words <- c("apple", "banana", "cherry")
rgx <- get_regex_from_vector(words, "^", "$")

# Example 2: Create a regex pattern for words with escaped parentheses
words <- c("foo(bar)", "baz(qux)")
rgx <- get_regex_from_vector(words, "(", ")?", c("(", ")"), fix_escaping = TRUE)
#here we don't escape our custom pattern "(" and ")?" even if escaping of other will be fixed

}
\seealso{
\code{\link{fix_escaping}},
}
