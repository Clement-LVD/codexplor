% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/construct_corpus.R
\name{construct_corpus}
\alias{construct_corpus}
\title{Construct a Data Frame of Code Files from Local GitHub Repositories and/or Local Folders}
\usage{
construct_corpus(
  local_folders_paths = NULL,
  languages = "R",
  repos = NULL,
  ...
)
}
\arguments{
\item{local_folders_paths}{A character vector of local folder paths to scan for code files. Default is \code{NULL}.}

\item{languages}{A character vector specifying the programming language(s) to include in the corpus. Default is \code{"R"}.}

\item{repos}{A character vector of GitHub repository URLs or repository identifiers (e.g., \code{"user/repo"}) to extract files from. Default is \code{NULL}.}

\item{...}{Additional arguments passed to \code{srch_pattern_in_files_get_df}
(e.g., filtering criteria, depth of folder scanning, names of returned df col').}
}
\value{
A data frame containing the corpus of collected files. The data frame typically includes columns such as:
\describe{
\item{\code{file_path}}{Character. The local file path or constructed GitHub URL.}
}
}
\description{
This function builds a structured data frame containing code files
from either GitHub repositories or local folder paths.
Then it \strong{try to extract function names} according to a dictionary
of functions definition.
The resulting data frame provides an overview of the collected content,
including file paths, URLs (if applicable), and languages.
}
\details{
\itemize{
\item If \code{local_folders_paths} is provided (one or a list), the function scans the directories and retrieves file paths matching the specified languages.
\item If \code{repos} is provided (one or a list), it constructs URLs to the raw content of files from the specified GitHub repositories.
\item Both local paths and GitHub URLs can be combined in the final output.
}
}
\examples{
# Example 1: Construct a corpus from local folders
corp_myself <- construct_corpus(local_folders_paths = "~", languages = c("R", "Python"))

# Example 2: Construct a corpus from GitHub repositories
corp_strreadr <- construct_corpus(repos = c("tidyverse/stringr", "tidyverse/readr"), "R")

# Example 3: Combine local folders and GitHub repositories
corp_me_and_dplyr <- construct_corpus("~", repos = "tidyverse/dplyr", c("R", "Cpp"))

}
\seealso{
\code{\link{srch_pattern_in_files_get_df}}, \code{\link{get_github_raw_filespath}}, \code{\link{function_def_regex_by_language}}
}
