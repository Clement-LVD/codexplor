% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_text_network_from_project.R
\name{get_text_network_from_project}
\alias{get_text_network_from_project}
\title{Get Text Network from folder path(s) and/or github repos}
\usage{
get_text_network_from_project(
  folder_path = NULL,
  repos = NULL,
  prefix_for_regex_from_the_text = "\\\\b",
  suffix_for_regex_from_the_text = "\\\\(",
  filter_egolink_within_a_file = TRUE,
  ...,
  file_path_from_colname = "from",
  file_path_to_colname = "to",
  function_matched_colname = "function",
  line_number_matched_colname = "line_number",
  content_matched_colname = "content_matched"
)
}
\arguments{
\item{folder_path}{\code{character} A string or list representing the path(s) and/or url of local folders path to read.}

\item{repos}{\code{character} A string or list representing the name(s) of github repos (e.g., 'tidyverse/stringr').}

\item{prefix_for_regex_from_the_text}{\code{character} A string representing the prefix to add
to each 1st match that will be turned into a new regular expressions. The default is an empty string.}

\item{suffix_for_regex_from_the_text}{\code{character} A string representing a regex to add as a suffix
of each match, in order to have a complete regular expression. The default is an empty string.}

\item{filter_egolink_within_a_file}{\code{logical}, default = \code{TRUE}. A logical value indicating whether to filter results based on
"ego links" (a document referring to itself)}

\item{...}{Parameters passed to \code{construct_corpus()} and \code{srch_pattern_in_files_get_df()}. These parameters are
\itemize{
\item characters values, e.g., filter results with \code{match_to_exclude}, adjust the "\code{pattern}" parameter for matching functions names, etc.
\item logical values, e.g., "\code{keep_comments = T}"
\item integer values such as \code{ignore_match_less_than_nchar}, etc.
}}

\item{file_path_from_colname}{\code{character}, default = \code{'from'} The column name (as a string) representing the "from" file path
in the result data frame.}

\item{file_path_to_colname}{\code{character}, default = \code{'to'} The column name (as a string) representing the "to" file path in
the result data frame.}

\item{function_matched_colname}{\code{character}, default = \code{'function'} The column name for the matched text
(default is a function name) in the result data frame.}

\item{line_number_matched_colname}{\code{character}, default = \code{'line_number'}  The column name (as a string) for the line number
of the second match in the result data frame.}

\item{content_matched_colname}{\code{character}, default = \code{'content_matched'} The column name (as a string)
for the full line where a match have occured.}
}
\value{
A \code{list} of \code{dataframe} symbolizing the edgelist of a document-to-document citations network
\describe{
\item{\code{from}}{\code{character} Citations Network - The local file path or GitHub URL that call a function.}
\item{\code{to}}{\code{character} Citations Network - The local file path or constructed GitHub URL where the function called is defined.}
\item{\code{file_path}}{\code{character} Corpus - The local file path or constructed GitHub URL.}
\item{\code{line_number}}{\code{integer} Corpus - The line number within the file.}
\item{\code{content}}{\code{character} Corpus - The content from a line.}
\item{\code{match}}{\code{character} Corpus - The matched text on this line, \code{NA} if there is no match.}
}
}
\description{
This function read files in a specified folder (default to only .R files)
extracting and filtering text based on a set of criteria.
}
\details{
It is designed to generate a network of text by cascading text research :

1st the func' try to match a pattern within the files, optionnaly filter the initial results.

Then, a regex-pattern is constructed by appending all the 1st match

and a 2nd research extract this pattern, and construct a network
(document with the 2nd match => document with the 1st match)
}
\examples{
# Example with url from github
result <- get_text_network_from_project(folder_path =  "~" )
# Return a list of df (1st one is supposed to be an edgelist)
# (from the file where a function is call => to the file were defined)
}
\seealso{
\code{\link{construct_corpus}}, \code{\link{srch_pattern_in_df}}, \code{\link{get_citations_network_from_df}}

\url{https://clement-lvd.github.io/codexplor/articles/vignette_get_text_network_from_project.html}
}
