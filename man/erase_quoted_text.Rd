% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/erase_quoted_text.R
\name{erase_quoted_text}
\alias{erase_quoted_text}
\title{erase_quoted_text() will replace every character of text Between Quotes and the quotes themselves}
\usage{
erase_quoted_text(
  text,
  char_for_replacing_each_char = " ",
  quoting_char = "\\""
)
}
\arguments{
\item{text}{A character vector. Each element is a string in which quoted text will be replaced.}

\item{char_for_replacing_each_char}{A character string (of length 1) used as the replacement for each
character in the quoted portion. The default is a single space (\code{" "}).}

\item{quoting_char}{A character string (of length 1) indicating the quoting character to be used.
The default is the double quote ". For example, use ' for single quotes.}
}
\value{
A character vector of the same length as \code{text}, with the quoted segments replaced, including the 2 quotes
(beginning and end of the match). The replacement will be operated by replacing each char by the
\code{char_for_replacing_each_char} characters (by default a space).
}
\description{
This function scans each element of a character vector for text enclosed by a specified quoting character
(by default the double quote, ". For each occurrence found, it replaces the entire matched string
(including the quoting characters) with a string composed of as many copies of a replacement character
(default is a single space) as there were characters in the matched string. This way, the overall length
of the element remains unchanged.
}
\examples{
\dontrun{
# Example 1: Using the default (double quotes)
text1 <- 'This is a "test" and another "example".'
erase_quoted_text(text1)
# Expected output: "This is a "    " and another "       "."

# Example 2: Using single quotes as delimiters
text2 <- "Here a 'sample' and another 'demo'."
erase_quoted_text(text2, quoting_char = "'")

# Example 3: Using underscore as the replacement character
text3 <- 'Replace "text" here.'
erase_quoted_text(text3, char_for_replacing_each_char = "_")
}
}
