% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_txt_from_df_vars.R
\name{extract_txt_from_df_vars}
\alias{extract_txt_from_df_vars}
\title{Extracts specified patterns from a dataframe column and returns the corresponding lines of the dataframe
In case of several pattern gived by the user, line will be multiplied if there is several matches on a line
This function allows the extraction of a specified pattern from selected columns of a dataframe.
The pattern extraction is applied to each row, and the results are returned as a new dataframe with
the extracted patterns as a list in a new column. The function handles multiple patterns and
will expand the dataframe by adding rows if necessary.
Only matching lines are returned (the default) or every line gived + eventually some new lines refleting several matches on a line}
\usage{
extract_txt_from_df_vars(
  df = NULL,
  regex_extract_txt = NULL,
  cols_for_searching_text = NULL,
  keep_empty_results = T,
  returned_col_name = "to"
)
}
\arguments{
\item{df}{DataFrame. The input dataframe from which the patterns will be extracted.}

\item{regex_extract_txt}{Character string. The regular expression pattern to extract from the text.}

\item{cols_for_searching_text}{Character or numeric vector. Specifies which columns to search for the patterns.}

\item{keep_empty_results}{\code{logical}, default = \code{T} Logical: Whether to keep rows with no matches (default is TRUE).}

\item{returned_col_name}{\code{character}, default = \code{"to"}: The name of the new column that will contain the matches (default is "to").}
}
\value{
A dataframe with an additional column containing the extracted patterns for each row.
}
\description{
Extracts specified patterns from a dataframe column and returns the corresponding lines of the dataframe
In case of several pattern gived by the user, line will be multiplied if there is several matches on a line
This function allows the extraction of a specified pattern from selected columns of a dataframe.
The pattern extraction is applied to each row, and the results are returned as a new dataframe with
the extracted patterns as a list in a new column. The function handles multiple patterns and
will expand the dataframe by adding rows if necessary.
Only matching lines are returned (the default) or every line gived + eventually some new lines refleting several matches on a line
}
\examples{
# Example usage
df <- data.frame(A = c("Hello World", "Pattern matching here", "Test123"),
                 B = c("This is a test", "Hello World again", "Pattern not found"))
extract_txt_from_df_vars(df, "World|Hello", cols_for_searching_text = 1:2)
#If using 2 regex separated by "|"
# It will return 5 lines : line #1 is duplicated on 2 lines (since there is 2 matches on line 1)
# (i.e. from one single line with "Hello Word" to one line for matching 'hello' and one for 'world')
# same for line #2, with 2 matches for 2 returned lines
#Third line is returned despite no match, since keep_empty_results is T (default)
}
