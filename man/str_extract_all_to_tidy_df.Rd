% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/str_extract_all_to_tidy_df.R
\name{str_extract_all_to_tidy_df}
\alias{str_extract_all_to_tidy_df}
\title{Extract regex matches from a string and return a tidy dataframe}
\usage{
str_extract_all_to_tidy_df(
  string,
  pattern,
  filter_unmatched = T,
  matches_colname = "matches",
  row_number_colname = "row_number"
)
}
\arguments{
\item{string}{A character vector containing the input text.}

\item{pattern}{A regex pattern to extract matches.}

\item{filter_unmatched}{Logical (default \code{TRUE}); if \code{TRUE}, removes unmatched values from the output.}

\item{matches_colname}{A string specifying the column name for extracted matches (default: \code{"matches"}).}

\item{row_number_colname}{A string specifying the column name for row numbers (default: \code{"row_number"}).}
}
\value{
A dataframe with the extracted matches and their corresponding row numbers.
}
\description{
This function applies \code{stringr::str_extract_all()} to a string, extracts regex matches,
and returns an unested dataframe with customizable column names.
Option offered : filtering of unmatched result (default)
}
\examples{
text_data <- c("Here is funcA and funcB", "Nothing here", "funcC is present")
pattern <- "func[A-C]"
result_df <- str_extract_all_to_tidy_df(text_data, pattern)
print(result_df)
}
