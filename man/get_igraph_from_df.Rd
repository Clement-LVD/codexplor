% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_igraph_from_df.R
\name{get_igraph_from_df}
\alias{get_igraph_from_df}
\title{Convert an edge list into an igraph network}
\usage{
get_igraph_from_df(edgelist, directed = T, filter_min_centrality = 0, ...)
}
\arguments{
\item{edgelist}{\code{data.frame}
A data frame containing at least two columns representing the edges (source and target nodes).}

\item{directed}{\code{logical}, default = \code{TRUE}
Indicates whether the graph should be directed (\code{TRUE}) or undirected (\code{FALSE}).}

\item{filter_min_centrality}{\code{numeric}, default = \code{0} (filter of the orphans)
Strict minimum total degree (sum of in-degree and out-degree) required to keep a node.
You have to indicate \code{-1} for keep the orphans (i.e. with degree = '0')}

\item{...}{Additional arguments passed to \code{igraph::graph_from_dataframe} for node selection (e.g., \code{ignore.case = TRUE}).}
}
\value{
An \code{igraph} object representing the processed graph.
}
\description{
This function takes a data frame representing an edge list and converts it into an \code{igraph} object.
It allows filtering nodes based on centrality (filter orphan by default).
It construct a directed network
}
\details{
\itemize{
\item \strong{Step 1:} Cleans the edge list (removes self-loops if \code{clean_egolink = TRUE}).
\item \strong{Step 2:} Constructs an \code{igraph} object.
\item \strong{Step 3:} Filters nodes with a total degree above \code{filter_min_centrality}.
\item \strong{Step 4 (optional):} Extracts a subgraph based on \code{made_subgraph_from_a_regex} and ego-level constraints.
}
}
\examples{
# Example edge list
edgelist <- data.frame(from = c("A", "B", "C", "D", "E"),
                       to   = c("B", "C", "A", "A", "A"))

# Create a directed igraph object with minimal filtering
g <- get_igraph_from_df(edgelist, directed = TRUE)

# Create an undirected graph with a degree filter
g <- get_igraph_from_df(edgelist, directed = FALSE, filter_min_centrality = 2)

}
